html {
  box-sizing: border-box; }

*,
*::after,
*::before {
  box-sizing: inherit; }

body {
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  background-color: #fafafa;
  color: #333; }

.container {
  max-width: 980px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 20px; }
  .container::after {
    clear: both;
    content: "";
    display: table; }

ul {
  padding: 0;
  margin: 18px 0 0 0; }

li a {
  color: #4183c4;
  text-decoration: none; }

li a:hover {
  text-decoration: underline; }

.sidebar {
  float: left;
  display: block;
  margin-right: 4.1109178249%;
  width: 25.6350586965%; }
  .sidebar:last-child {
    margin-right: 0; }

.user-basic {
  padding-bottom: 17px;
  border-bottom: 1px solid #eeeeee; }

img {
  max-width: 100%;
  border-radius: 5px; }

.sidebar h1 {
  font-size: 1.6em;
  margin: .17em 0 0 0; }

.sidebar h3 {
  margin: 0;
  color: #746666;
  font-weight: normal; }

.user-info {
  font-size: 0.85em;
  border-bottom: 1px solid #eeeeee;
  padding-bottom: 17px; }

.user-info li {
  list-style-type: none;
  padding-bottom: 8px;
  position: relative; }

.user-info .octicon {
  color: #cccccc;
  position: absolute; }

.user-meta {
  margin-left: 22px; }

.github-stats div {
  float: left;
  display: block;
  margin-right: 16.0363113405%;
  width: 22.2556714019%;
  display: inline-block; }
  .github-stats div:last-child {
    margin-right: 0; }

.github-stats {
  height: 70px;
  border-bottom: 1px solid #eeeeee; }

div.stat-numbers,
div.stat-numbers a {
  color: #4183c4;
  text-align: center;
  font-weight: bold;
  position: relative;
  margin-top: 11px; }

div.stat-numbers {
  font-size: 1.7em; }

.stat-numbers a {
  text-decoration: none; }

.stat-numbers span {
  color: #888888;
  font-size: 11px;
  font-weight: normal;
  position: absolute;
  bottom: -8px;
  left: 7px; }

span.mid {
  left: 11px; }

div.stat-numbers:hover .stat-number-label {
  color: #4183c4; }

.organizations img {
  height: 40px;
  width: 40px; }

.repositories {
  float: left;
  display: block;
  margin-right: 4.1109178249%;
  width: 70.2540234786%; }
  .repositories:last-child {
    margin-right: 0; }

.each-repo {
  padding: 20px 0 20px 0;
  position: relative;
  border-bottom: 1px solid #eeeeee; }

.repositories h3 {
  color: #4183c4;
  font-size: 20px;
  margin-bottom: 8px; }

.repositories li {
  list-style-type: none; }

.updated-repo {
  color: #888888;
  font-size: .85em; }

.repo-description {
  margin-bottom: 10px;
  color: #666666;
  font-size: .85em; }

.repo-activity {
  position: absolute;
  right: 0;
  top: 20px; }

.repo-activity span {
  margin-right: .4em; }

.language {
  color: #888888;
  font-size: .75em;
  font-weight: bold; }

.repo-activity a {
  color: #888888;
  font-size: .8em;
  font-weight: bold; }

.repo-activity a:hover {
  color: #4183c4; }

.octicon-star::before,
.octicon-git-branch::before {
  margin-right: .3em; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2Jvd2VyX2NvbXBvbmVudHMvbmVhdC9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2dyaWQvX2JveC1zaXppbmcuc2NzcyIsIm1haW4uc2NzcyIsIi4uL2Jvd2VyX2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2FkZG9ucy9fZm9udC1zdGFja3Muc2NzcyIsIl9jb2xvcnMuc2NzcyIsIi4uL2Jvd2VyX2NvbXBvbmVudHMvbmVhdC9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2dyaWQvX291dGVyLWNvbnRhaW5lci5zY3NzIiwiLi4vYm93ZXJfY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYWRkb25zL19jbGVhcmZpeC5zY3NzIiwiLi4vYm93ZXJfY29tcG9uZW50cy9uZWF0L2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZ3JpZC9fc3Bhbi1jb2x1bW5zLnNjc3MiLCIuLi9ib3dlcl9jb21wb25lbnRzL25lYXQvYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9ncmlkL19wcml2YXRlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0U7RUFDRSx1QkFBdUIsRUFEbkI7O0FBT0g7OztFQUNDLG9CQUFvQixFQURYOztBQ0FmO0VBQ0UsMEVDQ3NFO0VEQXRFLDBCRVB1QjtFRlF2QixZRVhjLEVGUVY7O0FBS047RUdpQkUsaUJIaEI4QjtFR2lCOUIsa0JBQ2E7RUFEYixtQkFFYztFSGxCZCxpQkFBaUIsRUFGUjtFSUlSO0lBQ0MsWUFBWTtJQUNaLFlBQVk7SUFDWixlQUFlLEVBSFA7O0FKQVo7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CLEVBRmxCOztBQUlBO0VBQ0QsZUVaa0I7RUZhbEIsc0JBQXNCLEVBRmxCOztBQUlGO0VBQ0YsMkJBQTJCLEVBRGpCOztBQUdaO0VLcUNJLFlBQU07RUFHSixlQUFlO0VBZWYsNEJDdEVjO0VEdUVkLHNCQzVFYyxFTm9CVjtFSzBESDtJQUNDLGdCQUF3QixFQURaOztBTHZEcEI7RUFDRSxxQkFBcUI7RUVmckIsaUNBVDJCLEVGdUJqQjs7QUFLWjtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFGaEI7O0FBSUk7RUFDUCxpQkFBaUI7RUFDakIsb0JBQW9CLEVBRlQ7O0FBSUo7RUFDUCxVQUFVO0VBQ1YsZUFBYztFQUNkLG9CQUFvQixFQUhUOztBQUtiO0VBQ0Usa0JBQWtCO0VFakNsQixpQ0FUMkI7RUY0QzNCLHFCQUFxQixFQUhaOztBQU1BO0VBQ1Qsc0JBQXNCO0VBQ3RCLG9CQUFvQjtFQUNwQixtQkFBbUIsRUFIUDs7QUFLSDtFQUNULGVFcERrQjtFRnFEbEIsbUJBQW1CLEVBRkE7O0FBS3JCO0VBQ0Usa0JBQWtCLEVBRFI7O0FBSUU7RUtKVixZQUFNO0VBR0osZUFBZTtFQWVmLDZCQ3RFYztFRHVFZCxzQkM1RWM7RU4rRGxCLHNCQUFzQixFQUZOO0VLaUJYO0lBQ0MsZ0JBQXdCLEVBRFo7O0FMYnBCO0VBRUUsYUFBYTtFRTFEYixpQ0FUMkIsRUZpRWQ7O0FBTUU7O0VBQ2YsZUV0RWtCO0VGdUVsQixtQkFBbUI7RUFFbkIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixpQkFBaUIsRUFOQTs7QUFRaEI7RUFDRCxpQkFBaUIsRUFERDs7QUFHSjtFQUNaLHNCQUFzQixFQURQOztBQUlIO0VBQ1osZUVuRm9CO0VGb0ZwQixnQkFBZ0I7RUFDaEIsb0JBQW9CO0VBQ3BCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsVUFBVSxFQU5ROztBQVNoQjtFQUNGLFdBQVcsRUFESDs7QUFJYTtFQUNyQixlRWxHa0IsRUZpR3NCOztBQUczQjtFQUNiLGFBQWE7RUFDYixZQUFZLEVBRk07O0FBSXBCO0VLakRJLFlBQU07RUFHSixlQUFlO0VBZWYsNEJDdEVjO0VEdUVkLHNCQzVFYyxFTjBHTjtFSzVCUDtJQUNDLGdCQUF3QixFQURaOztBTCtCcEI7RUFDRSx1QkFBc0I7RUFDdEIsbUJBQW1CO0VFdEduQixpQ0FUMkIsRUY2R2pCOztBQU1FO0VBQ1osZUVsSGtCO0VGbUhsQixnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBSEo7O0FBTUg7RUFDWixzQkFBc0IsRUFETjs7QUFHbEI7RUFDRSxlRXpIb0I7RUYwSHBCLGlCQUFpQixFQUZKOztBQUlmO0VBQ0Usb0JBQW9CO0VBQ3BCLGVFL0h3QjtFRmdJeEIsaUJBQWlCLEVBSEE7O0FBTW5CO0VBRUUsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxVQUFVLEVBSkk7O0FBT0Q7RUFDYixtQkFBbUIsRUFEQTs7QUFJckI7RUFDRSxlRTlJb0I7RUYrSXBCLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFIVDs7QUFLSTtFQUNiLGVFbkpvQjtFRm9KcEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQixFQUhIOztBQUtEO0VBQ2QsZUUxSmtCLEVGeUpJOztBQUlMOztFQUNqQixtQkFBbUIsRUFETyIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuQGlmICRib3JkZXItYm94LXNpemluZyA9PSB0cnVlIHtcbiAgaHRtbCB7IC8vIGh0dHA6Ly9iaXQubHkvMXFrMnRWUlxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICAqIHtcbiAgICAmLFxuICAgICY6OmFmdGVyLFxuICAgICY6OmJlZm9yZSB7XG4gICAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgIH1cbiAgfVxufVxuIiwiQGltcG9ydCAnLi4vYm93ZXJfY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYm91cmJvbic7XG5AaW1wb3J0ICcuLi9ib3dlcl9jb21wb25lbnRzL25lYXQvYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9uZWF0JztcblxuQGltcG9ydCBcImNvbG9yc1wiO1xuJGdyaWQtY29sdW1uczogNztcbi8vIFR5cG9ncmFwaHlcbiRiYXNlLWZvbnQtZmFtaWx5OiAkaGVsdmV0aWNhO1xuXG5cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtYmFja2dyb3VuZC1jb2xvcjtcbiAgY29sb3I6ICRiYXNlLWZvbnQtY29sb3I7XG59XG4uY29udGFpbmVye1xuICBAaW5jbHVkZSBvdXRlci1jb250YWluZXIoOTgwcHgpO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxudWx7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMThweCAwIDAgMDtcbn1cbmxpIGEge1xuICBjb2xvcjogJGxpbmstY29sb3I7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbmxpIGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5zaWRlYmFyIHtcbiAgQGluY2x1ZGUgc3Bhbi1jb2x1bW5zKDIpO1xufVxuLnVzZXItYmFzaWN7XG4gIHBhZGRpbmctYm90dG9tOiAxN3B4O1xuICBAaW5jbHVkZSBib3JkZXItYm90dG9tKCk7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuLnNpZGViYXIgaDEge1xuICBmb250LXNpemU6IDEuNmVtO1xuICBtYXJnaW46IC4xN2VtIDAgMCAwO1xufVxuLnNpZGViYXIgaDMge1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiM3NDY2NjY7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG4udXNlci1pbmZve1xuICBmb250LXNpemU6IDAuODVlbTtcbiAgQGluY2x1ZGUgYm9yZGVyLWJvdHRvbSgpO1xuICBwYWRkaW5nLWJvdHRvbTogMTdweDtcblxufVxuLnVzZXItaW5mbyBsaXtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nLWJvdHRvbTogOHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4udXNlci1pbmZvIC5vY3RpY29uIHtcbiAgY29sb3I6ICRpY29uLWNvbG9yO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbn1cbi51c2VyLW1ldGEge1xuICBtYXJnaW4tbGVmdDogMjJweDtcbn1cblxuLmdpdGh1Yi1zdGF0cyBkaXZ7XG4gIEBpbmNsdWRlIHNwYW4tY29sdW1ucygwLjY2IG9mIDIpO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4uZ2l0aHViLXN0YXRzIHtcblxuICBoZWlnaHQ6IDcwcHg7XG4gIEBpbmNsdWRlIGJvcmRlci1ib3R0b20oKTtcbn1cbmRpdi5zdGF0LW51bWJlcnMsXG5kaXYuc3RhdC1udW1iZXJzIGF7XG4gIGNvbG9yOiAkbGluay1jb2xvcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi10b3A6IDExcHg7XG59XG5kaXYuc3RhdC1udW1iZXJzIHtcbiAgZm9udC1zaXplOiAxLjdlbTtcbn1cbi5zdGF0LW51bWJlcnMgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnN0YXQtbnVtYmVycyBzcGFuIHtcbiAgY29sb3I6ICR1cGRhdGUtY29sb3I7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC04cHg7XG4gIGxlZnQ6IDdweDtcblxufVxuc3Bhbi5taWQge1xuICBsZWZ0OiAxMXB4O1xufVxuXG5kaXYuc3RhdC1udW1iZXJzOmhvdmVyIC5zdGF0LW51bWJlci1sYWJlbHtcbiAgY29sb3I6ICRsaW5rLWNvbG9yO1xufVxuLm9yZ2FuaXphdGlvbnMgaW1nIHtcbiAgaGVpZ2h0OiA0MHB4O1xuICB3aWR0aDogNDBweDtcbn1cbi5yZXBvc2l0b3JpZXN7XG4gIEBpbmNsdWRlIHNwYW4tY29sdW1ucyg1KTtcbn1cbi5lYWNoLXJlcG8ge1xuICBwYWRkaW5nOiAyMHB4IDAgMjBweCAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIEBpbmNsdWRlIGJvcmRlci1ib3R0b20oKTtcbn1cblxuLnJlcG9zaXRvcmllcyBoM3tcbiAgY29sb3I6ICRsaW5rLWNvbG9yO1xuICBmb250LXNpemU6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbn1cblxuLnJlcG9zaXRvcmllcyBsaSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cbi51cGRhdGVkLXJlcG8ge1xuICBjb2xvcjogJHVwZGF0ZS1jb2xvcjtcbiAgZm9udC1zaXplOiAuODVlbTtcbn1cbi5yZXBvLWRlc2NyaXB0aW9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgY29sb3I6ICRyZXBvLWRlc2NyaXB0aW9uO1xuICBmb250LXNpemU6IC44NWVtO1xuXG59XG4ucmVwby1hY3Rpdml0eSB7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAyMHB4O1xuXG59XG4ucmVwby1hY3Rpdml0eSBzcGFuIHtcbiAgbWFyZ2luLXJpZ2h0OiAuNGVtO1xufVxuXG4ubGFuZ3VhZ2Uge1xuICBjb2xvcjogJHVwZGF0ZS1jb2xvcjtcbiAgZm9udC1zaXplOiAuNzVlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4ucmVwby1hY3Rpdml0eSBhe1xuICBjb2xvcjogJHVwZGF0ZS1jb2xvcjtcbiAgZm9udC1zaXplOiAuOGVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5yZXBvLWFjdGl2aXR5IGE6aG92ZXIge1xuICBjb2xvcjokbGluay1jb2xvcjtcbn1cbi5vY3RpY29uLXN0YXI6OmJlZm9yZSxcbi5vY3RpY29uLWdpdC1icmFuY2g6OmJlZm9yZXtcbiAgbWFyZ2luLXJpZ2h0OiAuM2VtO1xufSIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIEdlb3JnaWEgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJGdlb3JnaWE6IFwiR2VvcmdpYVwiLCBcIkNhbWJyaWFcIiwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgXCJUaW1lc1wiLCBzZXJpZjtcblxuLy8vIEhlbHZldGljYSBmb250IHN0YWNrLlxuLy8vXG4vLy8gQHR5cGUgTGlzdFxuXG4kaGVsdmV0aWNhOiBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiUm9ib3RvXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcblxuLy8vIEx1Y2lkYSBHcmFuZGUgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJGx1Y2lkYS1ncmFuZGU6IFwiTHVjaWRhIEdyYW5kZVwiLCBcIlRhaG9tYVwiLCBcIlZlcmRhbmFcIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmO1xuXG4vLy8gTW9ub3NwYWNlIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiRtb25vc3BhY2U6IFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIFwiQ29uc29sYXNcIiwgXCJDb3VyaWVyXCIsIG1vbm9zcGFjZTtcblxuLy8vIFZlcmRhbmEgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJHZlcmRhbmE6IFwiVmVyZGFuYVwiLCBcIkdlbmV2YVwiLCBzYW5zLXNlcmlmO1xuIiwiLy8gQ29sb3JzXG4kYmx1ZTogIzQ3N2RjYTtcbiRkYXJrLWdyYXk6ICMzMzM7XG4kbWVkaXVtLWdyYXk6ICM5OTk7XG4kbGlnaHQtZ3JheTogI2RkZDtcbiR2ZXJ5LWxpZ2h0LWdyYXk6ICNmYWZhZmE7XG5cbiRiYXNlLWZvbnQtY29sb3I6ICRkYXJrLWdyYXk7XG4kYmFzZS1iYWNrZ3JvdW5kLWNvbG9yOiAkdmVyeS1saWdodC1ncmF5O1xuXG4kYm9yZGVyLWJvdHRvbS1jb2xvcjogI2VlZWVlZTtcbiRpY29uLWNvbG9yOiAjY2NjY2NjO1xuJGxpbmstY29sb3I6ICM0MTgzYzQ7XG4kcmVwby1kZXNjcmlwdGlvbjogIzY2NjY2NjtcbiR1cGRhdGUtY29sb3I6ICM4ODg4ODg7XG4kc2VhcmNoLWFyZWEtYm9yZGVyOiAkbGlnaHQtZ3JheTtcbiRzZWFyY2gtYm94LXRleHQ6ICNhOWE5YTk7XG5cbkBtaXhpbiBib3JkZXItYm90dG9tKCl7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkYm9yZGVyLWJvdHRvbS1jb2xvcjtcbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIE1ha2VzIGFuIGVsZW1lbnQgYSBvdXRlciBjb250YWluZXIgYnkgY2VudHJpbmcgaXQgaW4gdGhlIHZpZXdwb3J0LCBjbGVhcmluZyBpdHMgZmxvYXRzLCBhbmQgc2V0dGluZyBpdHMgYG1heC13aWR0aGAuXG4vLy8gQWx0aG91Z2ggb3B0aW9uYWwsIHVzaW5nIGBvdXRlci1jb250YWluZXJgIGlzIHJlY29tbWVuZGVkLiBUaGUgbWl4aW4gY2FuIGJlIGNhbGxlZCBvbiBtb3JlIHRoYW4gb25lIGVsZW1lbnQgcGVyIHBhZ2UsIGFzIGxvbmcgYXMgdGhleSBhcmUgbm90IG5lc3RlZC5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyIFt1bml0XX0gJGxvY2FsLW1heC13aWR0aCBbJG1heC13aWR0aF1cbi8vLyAgIE1heCB3aWR0aCB0byBiZSBhcHBsaWVkIHRvIHRoZSBlbGVtZW50LiBDYW4gYmUgYSBwZXJjZW50YWdlIG9yIGEgbWVhc3VyZS5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBvdXRlci1jb250YWluZXIoMTAwJSk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgICp6b29tOiAxO1xuLy8vICAgICBtYXgtd2lkdGg6IDEwMCU7XG4vLy8gICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuLy8vICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4vLy8gICB9XG4vLy9cbi8vLyAgIC5lbGVtZW50OmJlZm9yZSwgLmVsZW1lbnQ6YWZ0ZXIge1xuLy8vICAgICBjb250ZW50OiBcIiBcIjtcbi8vLyAgICAgZGlzcGxheTogdGFibGU7XG4vLy8gICB9XG4vLy9cbi8vLyAgIC5lbGVtZW50OmFmdGVyIHtcbi8vLyAgICAgY2xlYXI6IGJvdGg7XG4vLy8gICB9XG5cbkBtaXhpbiBvdXRlci1jb250YWluZXIoJGxvY2FsLW1heC13aWR0aDogJG1heC13aWR0aCkge1xuICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgbWF4LXdpZHRoOiAkbG9jYWwtbWF4LXdpZHRoO1xuICBtYXJnaW46IHtcbiAgICBsZWZ0OiBhdXRvO1xuICAgIHJpZ2h0OiBhdXRvO1xuICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBQcm92aWRlcyBhbiBlYXN5IHdheSB0byBpbmNsdWRlIGEgY2xlYXJmaXggZm9yIGNvbnRhaW5pbmcgZmxvYXRzLlxuLy8vXG4vLy8gQGxpbmsgaHR0cDovL2Nzc21vam8uY29tL2xhdGVzdF9uZXdfY2xlYXJmaXhfc29fZmFyL1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIE91dHB1dFxuLy8vICAgLmVsZW1lbnQ6OmFmdGVyIHtcbi8vLyAgICAgY2xlYXI6IGJvdGg7XG4vLy8gICAgIGNvbnRlbnQ6IFwiXCI7XG4vLy8gICAgIGRpc3BsYXk6IHRhYmxlO1xuLy8vICAgfVxuXG5AbWl4aW4gY2xlYXJmaXgge1xuICAmOjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgfVxufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gU3BlY2lmaWVzIHRoZSBudW1iZXIgb2YgY29sdW1ucyBhbiBlbGVtZW50IHNob3VsZCBzcGFuLiBJZiB0aGUgc2VsZWN0b3IgaXMgbmVzdGVkIHRoZSBudW1iZXIgb2YgY29sdW1ucyBvZiBpdHMgcGFyZW50IGVsZW1lbnQgc2hvdWxkIGJlIHBhc3NlZCBhcyBhbiBhcmd1bWVudCBhcyB3ZWxsLlxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkc3BhblxuLy8vICAgQSBsaXN0IGNvbnRhaW5pbmcgYCRjb2x1bW5zYCwgdGhlIHVuaXRsZXNzIG51bWJlciBvZiBjb2x1bW5zIHRoZSBlbGVtZW50IHNwYW5zIChyZXF1aXJlZCksIGFuZCBgJGNvbnRhaW5lci1jb2x1bW5zYCwgdGhlIG51bWJlciBvZiBjb2x1bW5zIHRoZSBwYXJlbnQgZWxlbWVudCBzcGFucyAob3B0aW9uYWwpLlxuLy8vXG4vLy8gICBJZiBvbmx5IG9uZSB2YWx1ZSBpcyBwYXNzZWQsIGl0IGlzIGFzc3VtZWQgdGhhdCBpdCdzIGAkY29sdW1uc2AgYW5kIHRoYXQgdGhhdCBgJGNvbnRhaW5lci1jb2x1bW5zYCBpcyBlcXVhbCB0byBgJGdyaWQtY29sdW1uc2AsIHRoZSB0b3RhbCBudW1iZXIgb2YgY29sdW1ucyBpbiB0aGUgZ3JpZC5cbi8vL1xuLy8vICAgVGhlIHZhbHVlcyBjYW4gYmUgc2VwYXJhdGVkIHdpdGggYW55IHN0cmluZyBzdWNoIGFzIGBvZmAsIGAvYCwgZXRjLlxuLy8vXG4vLy8gICBgJGNvbHVtbnNgIGFsc28gYWNjZXB0cyBkZWNpbWFscyBmb3Igd2hlbiBpdCdzIG5lY2Vzc2FyeSB0byBicmVhayBvdXQgb2YgdGhlIHN0YW5kYXJkIGdyaWQuIEUuZy4gUGFzc2luZyBgMi40YCBpbiBhIHN0YW5kYXJkIDEyIGNvbHVtbiBncmlkIHdpbGwgZGl2aWRlIHRoZSByb3cgaW50byA1IGNvbHVtbnMuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGRpc3BsYXkgW2Jsb2NrXVxuLy8vICAgU2V0cyB0aGUgZGlzcGxheSBwcm9wZXJ0eSBvZiB0aGUgZWxlbWVudC4gQnkgZGVmYXVsdCBpdCBzZXRzIHRoZSBkaXNwbGF5IHByb3BlcnQgb2YgdGhlIGVsZW1lbnQgdG8gYGJsb2NrYC5cbi8vL1xuLy8vICAgSWYgcGFzc2VkIGBibG9jay1jb2xsYXBzZWAsIGl0IGFsc28gcmVtb3ZlcyB0aGUgbWFyZ2luIGd1dHRlciBieSBhZGRpbmcgaXQgdG8gdGhlIGVsZW1lbnQgd2lkdGguXG4vLy9cbi8vLyAgIElmIHBhc3NlZCBgdGFibGVgLCBpdCBzZXRzIHRoZSBkaXNwbGF5IHByb3BlcnR5IHRvIGB0YWJsZS1jZWxsYCBhbmQgY2FsY3VsYXRlcyB0aGUgd2lkdGggb2YgdGhlIGVsZW1lbnQgd2l0aG91dCB0YWtpbmcgZ3V0dGVycyBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSByZXN1bHQgZG9lcyBub3QgYWxpZ24gd2l0aCB0aGUgYmxvY2stYmFzZWQgZ3JpZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBzcGFuLWNvbHVtbnMoNik7XG4vLy9cbi8vLyAgICAubmVzdGVkLWVsZW1lbnQge1xuLy8vICAgICAgQGluY2x1ZGUgc3Bhbi1jb2x1bW5zKDIgb2YgNik7XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGRpc3BsYXk6IGJsb2NrO1xuLy8vICAgICBmbG9hdDogbGVmdDtcbi8vLyAgICAgbWFyZ2luLXJpZ2h0OiAyLjM1NzY1JTtcbi8vLyAgICAgd2lkdGg6IDQ4LjgyMTE3JTtcbi8vLyAgIH1cbi8vL1xuLy8vICAgLmVsZW1lbnQ6bGFzdC1jaGlsZCB7XG4vLy8gICAgIG1hcmdpbi1yaWdodDogMDtcbi8vLyAgIH1cbi8vL1xuLy8vICAgLmVsZW1lbnQgLm5lc3RlZC1lbGVtZW50IHtcbi8vLyAgICAgZGlzcGxheTogYmxvY2s7XG4vLy8gICAgIGZsb2F0OiBsZWZ0O1xuLy8vICAgICBtYXJnaW4tcmlnaHQ6IDQuODI5MTYlO1xuLy8vICAgICB3aWR0aDogMzAuMTEzODklO1xuLy8vICAgfVxuLy8vXG4vLy8gICAuZWxlbWVudCAubmVzdGVkLWVsZW1lbnQ6bGFzdC1jaGlsZCB7XG4vLy8gICAgIG1hcmdpbi1yaWdodDogMDtcbi8vLyAgIH1cblxuQG1peGluIHNwYW4tY29sdW1ucygkc3BhbjogJGNvbHVtbnMgb2YgJGNvbnRhaW5lci1jb2x1bW5zLCAkZGlzcGxheTogYmxvY2spIHtcbiAgJGNvbHVtbnM6IG50aCgkc3BhbiwgMSk7XG4gICRjb250YWluZXItY29sdW1uczogY29udGFpbmVyLXNwYW4oJHNwYW4pO1xuXG4gICRwYXJlbnQtY29sdW1uczogZ2V0LXBhcmVudC1jb2x1bW5zKCRjb250YWluZXItY29sdW1ucykgIWdsb2JhbDtcblxuICAkZGlyZWN0aW9uOiBnZXQtZGlyZWN0aW9uKCRsYXlvdXQtZGlyZWN0aW9uLCAkZGVmYXVsdC1sYXlvdXQtZGlyZWN0aW9uKTtcbiAgJG9wcG9zaXRlLWRpcmVjdGlvbjogZ2V0LW9wcG9zaXRlLWRpcmVjdGlvbigkZGlyZWN0aW9uKTtcblxuICAkZGlzcGxheS10YWJsZTogaXMtZGlzcGxheS10YWJsZSgkY29udGFpbmVyLWRpc3BsYXktdGFibGUsICRkaXNwbGF5KTtcblxuICBAaWYgJGRpc3BsYXktdGFibGUgIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKCRjb2x1bW5zIC8gJGNvbnRhaW5lci1jb2x1bW5zKTtcbiAgfSBAZWxzZSB7XG4gICAgZmxvYXQ6ICN7JG9wcG9zaXRlLWRpcmVjdGlvbn07XG5cbiAgICBAaWYgJGRpc3BsYXkgIT0gbm8tZGlzcGxheSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICBAaWYgJGRpc3BsYXkgPT0gY29sbGFwc2Uge1xuICAgICAgQGluY2x1ZGUgLW5lYXQtd2FybihcIlRoZSAnY29sbGFwc2UnIGFyZ3VtZW50IHdpbGwgYmUgZGVwcmVjYXRlZC4gVXNlICdibG9jay1jb2xsYXBzZScgaW5zdGVhZC5cIik7XG4gICAgfVxuXG4gICAgQGlmICRkaXNwbGF5ID09IGNvbGxhcHNlIG9yICRkaXNwbGF5ID09IGJsb2NrLWNvbGxhcHNlIHtcbiAgICAgIHdpZHRoOiBmbGV4LWdyaWQoJGNvbHVtbnMsICRjb250YWluZXItY29sdW1ucykgKyBmbGV4LWd1dHRlcigkY29udGFpbmVyLWNvbHVtbnMpO1xuXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICB3aWR0aDogZmxleC1ncmlkKCRjb2x1bW5zLCAkY29udGFpbmVyLWNvbHVtbnMpO1xuICAgICAgfVxuXG4gICAgfSBAZWxzZSB7XG4gICAgICBtYXJnaW4tI3skZGlyZWN0aW9ufTogZmxleC1ndXR0ZXIoJGNvbnRhaW5lci1jb2x1bW5zKTtcbiAgICAgIHdpZHRoOiBmbGV4LWdyaWQoJGNvbHVtbnMsICRjb250YWluZXItY29sdW1ucyk7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi0jeyRkaXJlY3Rpb259OiAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiJHBhcmVudC1jb2x1bW5zOiAkZ3JpZC1jb2x1bW5zICFkZWZhdWx0O1xuJGZnLWNvbHVtbjogJGNvbHVtbjtcbiRmZy1ndXR0ZXI6ICRndXR0ZXI7XG4kZmctbWF4LWNvbHVtbnM6ICRncmlkLWNvbHVtbnM7XG4kY29udGFpbmVyLWRpc3BsYXktdGFibGU6IGZhbHNlICFkZWZhdWx0O1xuJGxheW91dC1kaXJlY3Rpb246IExUUiAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIGZsZXgtZ3JpZCgkY29sdW1ucywgJGNvbnRhaW5lci1jb2x1bW5zOiAkZmctbWF4LWNvbHVtbnMpIHtcbiAgJHdpZHRoOiAkY29sdW1ucyAqICRmZy1jb2x1bW4gKyAoJGNvbHVtbnMgLSAxKSAqICRmZy1ndXR0ZXI7XG4gICRjb250YWluZXItd2lkdGg6ICRjb250YWluZXItY29sdW1ucyAqICRmZy1jb2x1bW4gKyAoJGNvbnRhaW5lci1jb2x1bW5zIC0gMSkgKiAkZmctZ3V0dGVyO1xuICBAcmV0dXJuIHBlcmNlbnRhZ2UoJHdpZHRoIC8gJGNvbnRhaW5lci13aWR0aCk7XG59XG5cbkBmdW5jdGlvbiBmbGV4LWd1dHRlcigkY29udGFpbmVyLWNvbHVtbnM6ICRmZy1tYXgtY29sdW1ucywgJGd1dHRlcjogJGZnLWd1dHRlcikge1xuICAkY29udGFpbmVyLXdpZHRoOiAkY29udGFpbmVyLWNvbHVtbnMgKiAkZmctY29sdW1uICsgKCRjb250YWluZXItY29sdW1ucyAtIDEpICogJGZnLWd1dHRlcjtcbiAgQHJldHVybiBwZXJjZW50YWdlKCRndXR0ZXIgLyAkY29udGFpbmVyLXdpZHRoKTtcbn1cblxuQGZ1bmN0aW9uIGdyaWQtd2lkdGgoJG4pIHtcbiAgQHJldHVybiAkbiAqICRndy1jb2x1bW4gKyAoJG4gLSAxKSAqICRndy1ndXR0ZXI7XG59XG5cbkBmdW5jdGlvbiBnZXQtcGFyZW50LWNvbHVtbnMoJGNvbHVtbnMpIHtcbiAgQGlmICRjb2x1bW5zICE9ICRncmlkLWNvbHVtbnMge1xuICAgICRwYXJlbnQtY29sdW1uczogJGNvbHVtbnMgIWdsb2JhbDtcbiAgfSBAZWxzZSB7XG4gICAgJHBhcmVudC1jb2x1bW5zOiAkZ3JpZC1jb2x1bW5zICFnbG9iYWw7XG4gIH1cblxuICBAcmV0dXJuICRwYXJlbnQtY29sdW1ucztcbn1cblxuQGZ1bmN0aW9uIGlzLWRpc3BsYXktdGFibGUoJGNvbnRhaW5lci1pcy1kaXNwbGF5LXRhYmxlLCAkZGlzcGxheSkge1xuICBAcmV0dXJuICRjb250YWluZXItaXMtZGlzcGxheS10YWJsZSA9PSB0cnVlIG9yICRkaXNwbGF5ID09IHRhYmxlO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */